input {
	keyboard {
		xkb {	
		}
	}
	touchpad {
		tap
		natural-scroll
	}
	mouse {
	}
	focus-follows-mouse max-scroll-amount="0%"
}

output "eDP-1" {
	mode "1920x1080@60"
	scale 1.1
	transform  "normal"
	position x=1280 y=0
}

layout {
	gaps 3
	background-color "transparent"
	center-focused-column "never"
	preset-column-widths {
		proportion 0.33333
		proportion 0.5
		proportion 0.66667
	}
	default-column-width { proportion 0.5; }

	focus-ring {
		width 2
		active-color "#7aa2f7"
		inactive-color "#414868"
	}

	border {
		width 1
		active-color "#7aa2f7"
		inactive-color "#414868"
	}

	struts {
	}
	tab-indicator {
	  width 7 
	  gap 0 
	  length total-proportion=1.0
	  position "left"
	  place-within-column
	}
}

overview {
	zoom 1
	workspace-shadow {
		off
	}
}

layer-rule {
	match namespace="^wallpaper$"
	place-within-backdrop true
}


spawn-at-startup "sh" "-c" "swaybg -i .config/walpapers/mountain.jpg"
spawn-at-startup "sh" "-c" "waybar -c ~/.config/niri/waybar/config.jsonc -s ~/.config/niri/waybar/style.css"
spawn-at-startup "blueman-applet"
spawn-at-startup "nm-applet"
//spawn-at-startup "xwayland-satellite"
spawn-at-startup "sh" "-c" "swayidle -w"
spawn-at-startup "sh" "-c" "wl-paste --type text --watch cliphist store"
spawn-at-startup "sh" "-c" "wl-paste --type image --watch cliphist store"
spawn-at-startup "sh" "-c" "kdeconnect-cli --refresh"

prefer-no-csd
cursor {
	hide-when-typing
	hide-after-inactive-ms 5000
}
screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"
animations {
	slowdown 0.5
	workspace-switch {
		spring damping-ratio=1.0 stiffness=2000 epsilon=0.0001
	}
	horizontal-view-movement {
		spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
	}
	window-movement {
		spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
	}
	window-open {
		spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
		custom-shader r"
		float map(float value, float min1, float max1, float min2, float max2) {
			return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
		}
		vec4 open_color(vec3 coords_geo, vec3 size_geo) {
			float cur = niri_clamped_progress;
			if (coords_geo.x > cur) {
				return vec4(0.0);
			}
			vec3 coord = vec3(map(coords_geo.x,0.0, cur, 0.0, 1.0 ), coords_geo.y, coords_geo.z);
			return texture2D(niri_tex, (niri_geo_to_tex * coord).st);
		}
		"
	}
	window-close {
		spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
		custom-shader r"
		float map(float value, float min1, float max1, float min2, float max2) {
			return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
		}
		vec4 close_color(vec3 coords_geo, vec3 size_geo) {
			float cur = 1.0-niri_clamped_progress;
			if (coords_geo.x > cur) {
				return vec4(0.0);
			}
			vec3 coord = vec3(map(coords_geo.x,0.0, cur, 0.0, 1.0), coords_geo.y, coords_geo.z);
			return texture2D(niri_tex, (niri_geo_to_tex * coord).st);
		}
		"
	} 

}

window-rule {
	geometry-corner-radius 0
	clip-to-geometry true
}
window-rule{
	match app-id="code"
	open-maximized true 

}

window-rule {
	match app-id="firefox$" title="^Picture-in-Picture$"
	open-floating true
	default-floating-position x=32 y=32 relative-to="bottom-left"
}

window-rule {
	match app-id="xfce-polkit" 
	open-floating true
	default-floating-position x=728 y=400 relative-to="bottom-left"
}

window-rule {
	match app-id="zen$" title="^Picture-in-Picture$"

	open-floating true
	default-floating-position x=32 y=32 relative-to="bottom-left"	
}

window-rule {
	match app-id="kdenlive"
	open-maximized true
}

window-rule {
	match title="Nemo"
	
}

window-rule {
	match title="Picture in picture"
	open-floating true 
	default-floating-position x=32 y=32 relative-to="bottom-left"
}

window-rule {
	match app-id="Alacritty"
	max-height 300
}
hotkey-overlay{
	skip-at-startup
}
environment{

	QT_QPA_PLATFORMTHEME "qt6ct"
	QT_WAYLAND_DISABLE_WINDOWDECORATION "1"
	QT_AUTO_SCREEN_SCALE_FACTOR "1"
	QT_STYLE_OVERRIDE "kvantum"
	ELECTRON_OZONE_PLATFORM_HINT "auto"

}

/-window-rule {
	match app-id=r#"^org\.keepassxc\.KeePassXC$"#
	match app-id=r#"^org\.gnome\.World\.Secrets$"#
	block-out-from "screen-capture"
}

binds { 
	Mod+Shift+Slash { show-hotkey-overlay; }
	Mod+Shift+Space { switch-focus-between-floating-and-tiling; }
	Mod+Space { toggle-window-floating; }
	Mod+T {spawn "foot";}
	Mod+Shift+T { spawn "sh" "-c" "foot zellij" ; }
	Mod+Shift+B { spawn "zen-browser";}
	Mod+P { spawn "wl-color-picker";}
	Mod+O { toggle-overview; }
	Mod+Shift+Ctrl+O { debug-toggle-opaque-regions; }
	
	Mod+B {spawn "brave" "--enable-features=UseOzonePlatform" "--ozone-platform=wayland" ; }
	Mod+J { spawn "joplin-desktop" "--enable-features=UseOzonePlatform" "--ozone-platform=wayland";}
	Mod+Alt+C {spawn "cursor"  "--enable-features=UseOzonePlatform" "--ozone-platform=wayland" ; }
	// Mod+Shift+C { spawn "code" "--enable-features=UseOzonePlatform" "--ozone-platform=wayland" ; }
	Mod+Shift+C {spawn "zeditor";}
	Mod+Shift+P {spawn "postman"  "--enable-features=UseOzonePlatform" "--ozone-platform=wayland" ; }
	Mod+Shift+M {spawn "mongodb-compass" "--password-store='gnome-libsecret'" "--ignore-additional-command-line-flags";}
	Mod+G { spawn "github-desktop"  "--enable-features=UseOzonePlatform" "--ozone-platform=wayland";   }
	Mod+Alt+V { spawn "sh" "-c" "cliphist list | wofi --dmenu | cliphist decode | wl-copy";}
	Mod+D {spawn "sh" "-c" "pkill fuzzel || fuzzel drun";}
	Mod+F {spawn "nemo";}
	Mod+Shift+F {spawn "sh" "-c" "kitty yazi";}
	Alt+J {spawn "sh" "-c" "kitty nvim sample.js";}
	Alt+M {spawn "sh" "-c" "kitty mongosh";}
	Mod+Shift+W {spawn "sh" "-c" "~/.config/niri/scripts/toggle_waybar.sh";}
	Alt+P {spawn "sh" "-c" "foot -e sh -c 'cd dbIntegrationweek6 && nvim src/server.js'";}
	Mod+K {spawn "sh" "-c" "~/scripts/secondProject.sh";}
	Mod+Alt+K {spawn "sh" "-c" "~/.config/niri/scripts/killport.sh 3000";}
	Mod+Shift+R { spawn "sh" "-c" "~/.config/niri/scripts/gammastep.sh";}
	Mod+Alt+S {spawn "sh" "-c" "foot speedtest-rs";}
	F3 allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
	F2 allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
	F1        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
	XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }
	Shift+F6 allow-when-locked=true {spawn "brightnessctl"  "s" "1%+";}
	Shift+F5 allow-when-locked=true {spawn "brightnessctl"  "s" "1%-";}
	F5 allow-when-locked=true {spawn "brightnessctl"  "s" "5%-";}
	F6 allow-when-locked=true {spawn "brightnessctl" "s" "5%+";}

	Mod+N {toggle-column-tabbed-display;}
	Mod+Q { close-window; }
	Mod+L {spawn "swaylock";}
	Ctrl+Alt+B {spawn "sh" "-c" "~/.config/hypr/scripts/bluetooth_toggle.sh";}
	Ctrl+Alt+H {spawn "sh" "-c" " swaylock & systemctl hibernate";}
	Ctrl+Alt+I {spawn "sh" "-c" "~/.config/niri/scripts/idle_inhibitor.sh";} 
	Ctrl+Alt+P {spawn "poweroff";}
	Ctrl+Alt+R {spawn "reboot";}
	Mod+Left  { focus-column-left; }
	Mod+Down  { focus-window-down; }
	Mod+Up    { focus-window-up; }
	Mod+Right { focus-column-right; }

	Mod+Ctrl+Left  { move-column-left; }
	Mod+Ctrl+Down  { move-window-down; }
	Mod+Ctrl+Up    { move-window-up; }
	Mod+Ctrl+Right { move-column-right; }
	Mod+Ctrl+H     { move-column-left; }
	Mod+Ctrl+J     { move-window-down; }
	Mod+Ctrl+K     { move-window-up; }
	Mod+Ctrl+L     { move-column-right; }
	Mod+Shift+Down    { focus-window-or-workspace-down; }
	Mod+Shift+Up     { focus-window-or-workspace-up; }
	Mod+Home { focus-column-first; }
	Mod+End  { focus-column-last; }
	Mod+Ctrl+Home { move-column-to-first; }
	Mod+Ctrl+End  { move-column-to-last; }
	Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
	Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
	Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
	Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
	Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
	Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
	Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
	Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }
	Mod+U              { focus-workspace-down; }
	Mod+I              { focus-workspace-up; }
	Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
	Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
	Mod+Ctrl+U         { move-column-to-workspace-down; }
	Mod+Ctrl+I         { move-column-to-workspace-up; }
	Mod+Shift+U   { move-workspace-up; }
	Mod+Shift+D        { move-workspace-down; }
	Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
	Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
	Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
	Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }
	Mod+WheelScrollRight      { focus-column-right; }
	Mod+WheelScrollLeft       { focus-column-left; }
	Mod+Ctrl+WheelScrollRight { move-column-right; }
	Mod+Ctrl+WheelScrollLeft  { move-column-left; }
	Mod+Shift+WheelScrollDown      { focus-column-right; }
	Mod+Shift+WheelScrollUp        { focus-column-left; }
	Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
	Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }
	Mod+1 {focus-workspace 1; }
	Mod+2 {focus-workspace 2; }
	Mod+3 {focus-workspace 3; }
	Mod+4 { focus-workspace 4; }
	Mod+5 { focus-workspace 5; }
	Mod+6 { focus-workspace 6; }
	Mod+7 { focus-workspace 7; }
	Mod+8 { focus-workspace 8; }
	Mod+9 { focus-workspace 9; }
	Mod+Ctrl+1 { move-column-to-workspace 1; }
	Mod+Ctrl+2 { move-column-to-workspace 2; }
	Mod+Ctrl+3 { move-column-to-workspace 3; }
	Mod+Ctrl+4 { move-column-to-workspace 4; }
	Mod+Ctrl+5 { move-column-to-workspace 5; }
	Mod+Ctrl+6 { move-column-to-workspace 6; }
	Mod+Ctrl+7 { move-column-to-workspace 7; }
	Mod+Ctrl+8 { move-column-to-workspace 8; }
	Mod+Ctrl+9 { move-column-to-workspace 9; }
	Mod+Comma  { consume-window-into-column; }
	Mod+Period { expel-window-from-column; }
	Mod+R { switch-preset-column-width; }
	Mod+W { maximize-column; }
	Mod+Ctrl+W { fullscreen-window; }
	Mod+C { center-column; }
	Mod+Minus { set-column-width "-10%"; }
	Mod+Equal { set-column-width "+10%"; }
	Mod+Shift+Minus { set-window-height "-10%"; }
	Mod+Shift+Equal { set-window-height "+10%"; }
	Print { screenshot; }
	Ctrl+Print { screenshot-screen; }
	Alt+Print { screenshot-window; }
	Ctrl+Alt+L { quit; }
}

switch-events {
	lid-close {spawn "systemctl hibernate "; }
}
